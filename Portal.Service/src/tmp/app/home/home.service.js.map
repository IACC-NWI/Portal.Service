{"version":3,"sources":["app/home/home.service.ts"],"names":[],"mappings":"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","file":"home.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport * as moment from 'moment';\r\nimport { MemberModel } from '../member/member.model';\r\nimport { FestivalModel } from '../offeredservices/festival.model';\r\nimport { OfferedServiceModel } from '../offeredservices/offered-service.model';\r\nimport { PurchaseOfferingModel } from './purchase-offering.model';\r\ndeclare var SERVICE_URL;\r\n\r\n@Injectable()\r\nexport class HomeService {\r\n    private serviceUrls: any;\r\n    constructor(private http: Http) {\r\n        this.serviceUrls = SERVICE_URL;\r\n    }\r\n    public lookupmembers(query: string) {\r\n        return this.http.get(this.serviceUrls.MEMBER_SERVICE + '/api/member/lookupmembers/' + query)\r\n            .map(res => {\r\n                return this.convertJsonToListOfMembers(res);\r\n            })\r\n            .catch((error, source) => {\r\n                if (error.status === 400) {\r\n                    console.log('Bad Model.');\r\n                }\r\n            });\r\n    }\r\n    public getAllMembers() {\r\n        return this.http.get(this.serviceUrls.MEMBER_SERVICE + '/api/member/getallmembers')\r\n            .map(res => {\r\n                return this.convertJsonToListOfMembers(res);\r\n            })\r\n            .catch((error, source) => {\r\n                if (error.status === 400) {\r\n                    console.log('Bad Model.');\r\n                }\r\n            });\r\n    }\r\n    public getAllFestivals() {\r\n        return this.http.get(this.serviceUrls.TEMPLE_SERVICE + '/api/offeredservices/getallfestivals')\r\n            .map(res => this.convertJsonToFestivalModelArray(res))\r\n            .catch((error, source) => {\r\n                if (error.status === 400) {\r\n                    console.log('Bad Model.');\r\n                }\r\n            });\r\n    }\r\n    public getAllOfferedServices() {\r\n        return this.http.get(this.serviceUrls.TEMPLE_SERVICE + '/api/offeredservices/getallservices')\r\n            .map(res => this.convertJsonToOfferedServiceModelArray(res))\r\n            .catch((error, source) => {\r\n                if (error.status === 400) {\r\n                    console.log('Bad Model.');\r\n                }\r\n            });\r\n    }\r\n    public purchaseOffering(model: PurchaseOfferingModel) {\r\n        return this.http.post(this.serviceUrls.TEMPLE_SERVICE + '/api/offeredservices/purchaseoffering', model)\r\n            .map(r => r)\r\n            .catch((error, source) => {\r\n                if (error.status === 400) {\r\n                    console.log('Bad Model.');\r\n                }\r\n            });\r\n    }\r\n    convertJsonToOfferedServiceModelArray(data: any) {\r\n        let offeredSvcData = data.json() || [];\r\n        let retData = new Array<OfferedServiceModel>();\r\n        offeredSvcData.forEach(t => {\r\n            let ret = new OfferedServiceModel();\r\n            ret.Name = t.Name;\r\n            ret.Description = t.Description;\r\n            ret.FestivalId = t.FestivalId;\r\n            ret.FestivalName = t.FestivalName;\r\n            ret.ServiceId = t.ServiceId;\r\n            ret.SuggestedDonation = t.SuggestedDonation;\r\n            retData.push(ret);\r\n        });\r\n        return retData;\r\n    }\r\n    convertJsonToFestivalModelArray(data: any) {\r\n        let festivalData = data.json() || [];\r\n        let retData = new Array<FestivalModel>();\r\n        festivalData.forEach(t => {\r\n            let ret = new FestivalModel();\r\n            ret.FestivalId = t.FestivalId;\r\n            ret.Description = t.Description;\r\n            ret.Name = t.Name;\r\n            retData.push(ret);\r\n        });\r\n        return retData;\r\n    }\r\n    convertJsonToListOfMembers(data: any): MemberModel[] {\r\n        let memberData = data.json() || [];\r\n        let retData = new Array<MemberModel>();\r\n        memberData.forEach(item => {\r\n            let mem = new MemberModel();\r\n            mem.MemberId = item.MemberId;\r\n            mem.MemberSince = moment(item.MemberSince).format('MM/DD/YYYY');\r\n            mem.PhoneNumber = item.PhoneNumber;\r\n            mem.FirstName = item.FirstName;\r\n            mem.LastName = item.LastName;\r\n            mem.AddressLine1 = item.AddressLine1;\r\n            mem.AddressLine2 = item.AddressLine2;\r\n            mem.City = item.City;\r\n            mem.State = item.State;\r\n            mem.Zip = item.Zip;\r\n            mem.HasChildren = item.HasChildren;\r\n            mem.HasParent = item.HasParent;\r\n            mem.ParentMemberId = item.ParentMemberId;\r\n            mem.Email = item.Email;\r\n            retData.push(mem);\r\n        });\r\n        return retData;\r\n    }\r\n}\r\n"]}