{"version":3,"sources":["app/reports/purchases/purchases.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAqB,eAAe,CAAC,CAAA;AAGrC,gCAA+B,oBAAoB,CAAC,CAAA;AAIpD;IAGI,0BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC1B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IACD,0CAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,qCAAqC,CAAC;aACxF,GAAG,CAAC,UAAA,GAAG;YACJ,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAkB,CAAC;YAC3C,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAC9B,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACZ,IAAI,CAAC,GAAG,IAAI,gCAAc,EAAE,CAAC;gBAC7B,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;gBAChB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBAClB,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;gBAC1B,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC;gBACpC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAC,CAAC;IACX,CAAC;IACD,+CAAoB,GAApB,UAAqB,SAAiB,EAAE,OAAe;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,uCAAuC,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,CAAE;aACvH,GAAG,CAAC,UAAA,GAAG;YACJ,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAkB,CAAC;YAC3C,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAC9B,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACZ,IAAI,CAAC,GAAG,IAAI,gCAAc,EAAE,CAAC;gBAC7B,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;gBAChB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBAClB,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;gBAC1B,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC;gBACpC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAC,CAAC;IACX,CAAC;IAtCL;QAAC,iBAAU,EAAE;;wBAAA;IAuCb,uBAAC;AAAD,CAtCA,AAsCC,IAAA;AAtCY,wBAAgB,mBAsC5B,CAAA","file":"purchases.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { PurchasesModel } from '../purchases.model';\r\ndeclare var SERVICE_URL;\r\n\r\n@Injectable()\r\nexport class PurchasesService {\r\n    private serviceUrls: any;\r\n\r\n    constructor(private http: Http) {\r\n        this.serviceUrls = SERVICE_URL;\r\n    }\r\n    getAllPurchases() {\r\n        return this.http.get(this.serviceUrls.TEMPLE_SERVICE + '/api/reports/getallserviesperformed')\r\n            .map(res => {\r\n                let retModel = new Array<PurchasesModel>();\r\n                let resJsn = res.json() || [];\r\n                resJsn.forEach(t => {\r\n                    let m = new PurchasesModel();\r\n                    m.Name = t.Name;\r\n                    m.Count = t.Count;\r\n                    m.ServiceId = t.ServiceId;\r\n                    m.TotalDonations = t.TotalDonations;\r\n                    retModel.push(m);\r\n                });\r\n                return retModel;\r\n            });\r\n    }\r\n    getPurchasesForRange(startdate: string, enddate: string) {\r\n        return this.http.get(this.serviceUrls.TEMPLE_SERVICE + '/api/reports/getallservicesperformed/' + startdate + '/' + enddate )\r\n            .map(res => {\r\n                let retModel = new Array<PurchasesModel>();\r\n                let resJsn = res.json() || [];\r\n                resJsn.forEach(t => {\r\n                    let m = new PurchasesModel();\r\n                    m.Name = t.Name;\r\n                    m.Count = t.Count;\r\n                    m.ServiceId = t.ServiceId;\r\n                    m.TotalDonations = t.TotalDonations;\r\n                    retModel.push(m);\r\n                });\r\n                return retModel;\r\n            });\r\n    }\r\n}"]}