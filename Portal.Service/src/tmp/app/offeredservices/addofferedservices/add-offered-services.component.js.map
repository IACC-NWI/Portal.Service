{"version":3,"sources":["app/offeredservices/addofferedservices/add-offered-services.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAElD,sBAAmD,gBAAgB,CAAC,CAAA;AAEpE,8BAAqB,eAAe,CAAC,CAAA;AAGrC,6CAA0C,gCAAgC,CAAC,CAAA;AAO3E;IAKI,qCAAoB,yBAAoD,EAAU,WAAwB;QAAtF,8BAAyB,GAAzB,yBAAyB,CAA2B;QAAU,gBAAW,GAAX,WAAW,CAAa;QACtG,IAAI,CAAC,kBAAkB,GAAG,IAAI,KAAK,EAAiB,CAAC;QACrD,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAc,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,8CAAQ,GAAR;QAAA,iBAkBC;QAjBG,IAAI,gBAAgB,GAAG,oBAAI,CAAC,IAAI,EAAE,CAAC;QACnC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjD,SAAS,EAAE,CAAC,gBAAgB,CAAC;YAC7B,IAAI,EAAE,CAAC,EAAE,EAAE,CAAM,kBAAU,CAAC,QAAQ,EAAO,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACrE,WAAW,EAAE,CAAC,EAAE,EAAE,CAAM,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACnD,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAM,kBAAU,CAAC,QAAQ,CAAC,CAAC;SACrD,CAAC,CAAC;QAEH,IAAI,CAAC,yBAAyB,CAAC,eAAe,EAAE;aAC3C,SAAS,CAAC,UAAA,SAAS;YAChB,SAAS,CAAC,OAAO,CAAC,UAAA,IAAI;gBAClB,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACX,CAAC;IAED,+DAAyB,GAAzB,UAA0B,KAAU;QAChC,IAAI,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACpE,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,KAAK,EAAjC,CAAiC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEzF,IAAI,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC5E,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,wDAAkB,GAAlB,UAAmB,KAA0B;QAA7C,iBAGC;QAFG,IAAI,CAAC,yBAAyB,CAAC,oBAAoB,CAAC,KAAK,CAAC;aACrD,SAAS,CAAC,UAAA,UAAU,IAAI,OAAA,KAAI,CAAC,mBAAmB,GAAG,UAAU,EAArC,CAAqC,CAAC,CAAC;IACxE,CAAC;IA9CL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,2BAA2B;YACrC,WAAW,EAAE,kEAAkE;SAClF,CAAC;;mCAAA;IA4CF,kCAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,mCAA2B,8BA2CvC,CAAA","file":"add-offered-services.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { SelectItem } from 'primeng/primeng';\r\n\r\nimport { AddOfferedServicesService } from './add-offered-services.service';\r\nimport { OfferedServiceModel } from '../offered-service.model';\r\nimport { FestivalModel } from '../festival.model';\r\n@Component({\r\n    selector: 'iacc-add-offered-services',\r\n    templateUrl: 'app/offeredservices/addofferedservices/add-offered-services.html'\r\n})\r\nexport class AddOfferedServicesComponent implements OnInit {\r\n    newOfferedServicesForm: FormGroup;\r\n    offeredServiceToAdd: OfferedServiceModel;\r\n    festivals: SelectItem[];\r\n    availableFestivals: FestivalModel[];\r\n    constructor(private addOfferedServicesService: AddOfferedServicesService, private formBuilder: FormBuilder) {\r\n        this.availableFestivals = new Array<FestivalModel>();\r\n        this.festivals = new Array<SelectItem>();\r\n        this.festivals.push({ label: '-- Festivals --', value: null });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let offeredServiceId = UUID.UUID();\r\n        this.newOfferedServicesForm = this.formBuilder.group({\r\n            ServiceId: [offeredServiceId],\r\n            Name: ['', [<any>Validators.required, <any>Validators.maxLength(50)]],\r\n            Description: ['', [<any>Validators.maxLength(500)]],\r\n            FestivalId: [''],\r\n            FestivalName: [''],\r\n            SuggestedDonation: [0, [<any>Validators.required]]\r\n        });\r\n\r\n        this.addOfferedServicesService.getAllFestivals()\r\n            .subscribe(festivals => {\r\n                festivals.forEach(fest => {\r\n                    this.availableFestivals.push(fest);\r\n                    this.festivals.push({ label: fest.Name, value: fest.FestivalId });\r\n                });\r\n            });\r\n    }\r\n\r\n    festivalSelectValueChange(event: any) {\r\n        let festivalId = this.newOfferedServicesForm.controls['FestivalId'];\r\n        let festival = this.availableFestivals.filter(q => q.FestivalId === festivalId.value)[0];\r\n        \r\n        let festivalNameCtrl = this.newOfferedServicesForm.controls['FestivalName'];\r\n        festivalNameCtrl.setValue(festival.Name);\r\n    }\r\n\r\n    saveOfferedService(model: OfferedServiceModel): void {\r\n        this.addOfferedServicesService.addNewOfferedService(model)\r\n            .subscribe(offeredSvc => this.offeredServiceToAdd = offeredSvc);\r\n    }\r\n}"]}