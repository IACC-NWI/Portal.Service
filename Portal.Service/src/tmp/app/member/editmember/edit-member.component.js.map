{"version":3,"sources":["app/member/editmember/edit-member.component.ts"],"names":[],"mappings":"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","file":"edit-member.component.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { UUID } from 'angular2-uuid';\r\n\r\nimport { MemberModel } from '../member.model';\r\n\r\nimport { EditMemberService } from './edit-member.service';\r\n\r\n@Component({\r\n    selector: 'iacc-edit-member',\r\n    templateUrl: 'app/member/editmember/edit-member.html'\r\n})\r\nexport class EditMemberComponent implements OnInit {\r\n    memberIdToEdit: string;\r\n    memberToEdit: MemberModel;\r\n    editMemberForm: FormGroup;\r\n    familyMembers: MemberModel[];\r\n    constructor(private editMemberService: EditMemberService, private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute, private router: Router) {\r\n        this.memberToEdit = new MemberModel();\r\n        this.familyMembers = new Array<MemberModel>();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.editMemberForm = this.formBuilder.group({\r\n            MemberId: [''],\r\n            MemberSince: [moment(Date()).format('YYYY-MM-DD')],\r\n            PhoneNumber: ['', [<any>Validators.required, <any>Validators.maxLength(10), <any>Validators.minLength(10)]],\r\n            FirstName: ['', [<any>Validators.required, <any>Validators.maxLength(100)]],\r\n            LastName: ['', [<any>Validators.required, <any>Validators.maxLength(100)]],\r\n            Email: ['', [<any>Validators.required, <any>Validators.maxLength(100)]],\r\n            AddressLine1: ['', [<any>Validators.required, <any>Validators.maxLength(100)]],\r\n            AddressLine2: [''],\r\n            City: ['', [<any>Validators.required, <any>Validators.maxLength(50)]],\r\n            State: ['', [<any>Validators.required, <any>Validators.maxLength(2), <any>Validators.minLength(2)]],\r\n            Zip: ['', [<any>Validators.required, <any>Validators.maxLength(5), <any>Validators.minLength(5)]],\r\n            ParentMemberId: ['']\r\n        });\r\n\r\n        let self = this;\r\n        this.route.params.subscribe(params => {\r\n            self.memberIdToEdit = params['memberIdToEdit'];\r\n            self.editMemberService.getMemberById(self.memberIdToEdit)\r\n                .subscribe(member => {\r\n                    self.memberToEdit = member;\r\n                    let memberIdControl = self.editMemberForm.controls['MemberId'];\r\n                    memberIdControl.setValue(member.MemberId);\r\n                    let memberSinceControl = self.editMemberForm.controls['MemberSince'];\r\n                    memberSinceControl.setValue(member.MemberSince);\r\n                    let phoneNumberControl = self.editMemberForm.controls['PhoneNumber'];\r\n                    phoneNumberControl.setValue(member.PhoneNumber);\r\n                    let firstNameControl = self.editMemberForm.controls['FirstName'];\r\n                    firstNameControl.setValue(member.FirstName);\r\n                    let lastNameControl = self.editMemberForm.controls['LastName'];\r\n                    lastNameControl.setValue(member.LastName);\r\n                    let emailControl = self.editMemberForm.controls['Email'];\r\n                    emailControl.setValue(member.Email);\r\n                    let addressLine1Control = self.editMemberForm.controls['AddressLine1'];\r\n                    addressLine1Control.setValue(member.AddressLine1);\r\n                    let addressLine2Control = self.editMemberForm.controls['AddressLine2'];\r\n                    addressLine2Control.setValue(member.AddressLine2);\r\n                    let cityControl = self.editMemberForm.controls['City'];\r\n                    cityControl.setValue(member.City);\r\n                    let stateControl = self.editMemberForm.controls['State'];\r\n                    stateControl.setValue(member.State);\r\n                    let zipControl = self.editMemberForm.controls['Zip'];\r\n                    zipControl.setValue(member.Zip);\r\n                    let parentMemberControl = self.editMemberForm.controls['ParentMemberId'];\r\n                    parentMemberControl.setValue(member.ParentMemberId);\r\n                });\r\n            // Get Family Members.\r\n            self.editMemberService.getFamily(self.memberIdToEdit).subscribe(\r\n                family => {\r\n                    self.familyMembers = family;\r\n                });\r\n        });\r\n    }\r\n\r\n    update(model: MemberModel) {\r\n        this.editMemberService.updateMember(model).subscribe(memberUpdated => this.memberToEdit = memberUpdated);\r\n    }\r\n}"]}